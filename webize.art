#!/usr/bin/env arturo
;==========================================
; Webize
;
; Easy-to-use & minimalist 
; static website generator
; in Arturo
;
; @file: webize.art
; @author: drkameleon
;==========================================

Webize: #[
    version: "0.1"
] 

;--------------------------
; Globals
;--------------------------

Paths: #[
	build:  			"|target|/build"
	pages:				"|target|/pages"
	resourceFonts:  	"|target|/resources/fonts"
	resourceImages: 	"|target|/resources/images"
	resourceScripts:	"|target|/resources/scripts"
	resourceStyles: 	"|target|/resources/styles"
	theme:  			"|target|/theme"
]

Settings: #[]

;--------------------------
; Helpers
;--------------------------

toolExists?: function [cmd][ 
	not? empty? strip execute ~{!sh command -v |cmd|} 
]

printInfo: function [msg inf][
	if? not? null? attribute "section" ->
		print [color.green ("* " ++ msg) inf]
	else ->
		print [color.cyan ("   - " ++ msg) inf]
]

;--------------------------
; The main library
;--------------------------

newProject: function [target][
	printInfo.section "creating new project:" target
	write.directory to :string target ø
	loop Paths [k,pa][
		subpath: ~pa
		printInfo "creating:" subpath
		write.directory ~pa ø
	]
	write ~"|target|/config.art" ""
]

buildProject: function [][
	if? exists? "config.art" [
		print "building"
	]
	else [
		print "cannot build: not valid project"
	]
]

printHelp: function [][
    print ---
Usage:
  webize [command] <options>

Commands:
  new <name>                Creates new project
  build                     Builds current project 
  
  help                      Show this help screen
  version                   Show current version
---
]

initialize: function [][
	loop ['sass 'coffee 'minify 'cwebp] [tool][
		set Settings tool (toolExists? tool)
	]
	loop Settings [k,v][
		prints [pad.right k ++ ":" 10]
		
		if? boolean? v [
			if? v -> print "YES"
			else -> print "NO"
		]
		else -> print v
	]
]

;--------------------------
; The main entry point
;--------------------------

if standalone? [
	initialize

    if empty? arg [ printHelp, exit ]

	command: join.with:" " arg
	replace 'command "new" "newProject"
	replace 'command "build" "buildProject"

	inspect command

	command: map to :block command [item][
		if? not? set? to :literal item [
			to :literal item
		]
		else [
			item
		]
	]

	inspect command

	do command
]

;==========================================
; This is the end,
; my only friend, the end...
;==========================================